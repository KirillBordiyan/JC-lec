package org.example.lec3;

public class Main {
    public static void main(String[] args) {
//      поля хранятся в классе
//      значения полей в объектах (логично)
        Cat cat1 = new Cat("rtrt", "blue");
        Cat cat2 = new Cat("ctct", "green", 2);

        cat1.voice();

        Cat cat3 = new Cat("ttt", "red");
        System.out.println(cat3.getAge());


//        стек и куча
//        в стек кидаются примитивы, ссылок на объекты heap
//        LIFO
//        сюда же про область видимости, метод кидает все в стек и если что надо - берет только там
//        -заполняется и освобождается по мере вызова и завершения новых методов
//        -переменные в стеке хранятся до тех пор, пока не выполнится метод
//        -скорость обращения быстрее, чем в куче
//        -потокобезопасен, тк для каждого из создается свой стек
//
//
//        куча разделена на поколения: yang gen (недавно созданные), old gen (переходят из yng'a), perm gen(metaspace, статика)
//        -больше стека
//        -доступ медленнее
//        -не освобождается автоматически, юзается сборщик
//        -потоконебезопасна
//
//


//        сборка мусора автоматический, сложный, долгий
//        можно вызвать самостоятельно System.gc()
//        не рекомендуется
//        типы: последовательный, параллельный (по умолчанию),
//        CMS(для коротких пауз сборки),
//        G1 (для многопроцессорных),
//        ZGC (масштабируемый с низкой задержкой)
//

//      Итоги по памяти:
//      куча доступна везде
//      все объекты в ней
//      недолговечна
//      обе могу быть заполнены
//      куча > стека по объему
//

//
//
//
//
//
//


    }

}
